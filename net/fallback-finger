#!/usr/bin/env bash

. lib.bash || exit
progname='fbin/finger'

filter() { perl -pe 's/\033/"^".chr(ord($&)+0100)/ge'; }

urlencode() { ~grawity/code/bin/urlencode "$@"; }

set -o pipefail

detail=0

while getopts "l" OPT; do
	case $OPT in
	'l') detail=1;;
	esac
done

shift $((OPTIND-1))
query=$1

if (( detail )); then
	query="/W $query"
fi

if [[ $query == *@* ]]; then
	host=${query##*@}
	query=${query%@*}
else
	host=${FINGER_HOST:-localhost}
fi

if [[ $host == *:* ]]; then
	uhost=[$host]
else
	uhost=$host
fi

uquery=$(urlencode -- "$query")

if have curl && curl -V | grep -wqs gopher; then
	debug "found curl with Gopher support"
	curl -gsS "gopher://$uhost:79/0$uquery"
elif have curl && curl -V | grep -wqs telnet; then
	debug "found curl with Telnet support"
	printf '%s\r\n' "$query" | curl -gsS "telnet://$uhost:79"
elif have ncat; then
	debug "found Ncat"
	# oneaddr
	printf '%s\r\n' "$query" | ncat "$host" 79
elif have socat; then
	debug "fount Socat"
	# oneaddr
	printf '%s\r\n' "$query" | socat -t10 -T10 stdio "tcp:$uhost:79"
elif have lynx; then
	debug "found Lynx"
	# adds own header
	lynx -dump -nolist "finger://$host/$uquery"
elif have nc; then
	debug "found some-or-other netcat"
	# may be IPv4-only, may be oneaddr
	printf '%s\r\n' "$query" | nc "$host" 79
else
	die "no useful TCP client found"
fi | filter
